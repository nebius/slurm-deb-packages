name: Build mock packages

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        include:
          - platform: linux/amd64
            runner: X64
          - platform: linux/arm64
            runner: ARM64

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: cuda-mock-packages/Dockerfile
          push: false
          tags: cuda_mock_builder:0.0.1
          platforms: ${{ matrix.platform }}
          load: true
          build-args: |
            BASE_IMAGE=ubuntu:jammy
          cache-from: type=local,src=.buildx-cache
          cache-to: type=local,dest=.buildx-cache,mode=max

      - name: Create cuda_mock_build_output directory
        run: mkdir -p cuda_mock_build_output

      - name: Run Docker container and copy files
        run: |
          container_id=$(docker create cuda_mock_builder:0.0.1)
          docker start $container_id
          docker cp $container_id:/cuda-mock-packages/ ./cuda_mock_build_output/
          docker stop $container_id
          docker rm $container_id

      - name: Create GitHub Release and Upload DEB packages
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: cuda_mocks
          name: Cuda mock packages
          body: "Mock packages for nvidia-open and cuda-drivers"
          draft: false
          prerelease: false
          files: |
            cuda_mock_build_output/cuda-mock-packages/*.deb

      - name: Cleanup
        run: rm -rf cuda_mock_build_output
