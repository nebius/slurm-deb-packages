name: Build nccl tests binaries

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        build:
          - cuda_version: 12.9.0
            build_args: []
        distribution:
          - ubuntu24.04
        include:
          - platform: linux/amd64
            runner: X64
            ld_library_path: /lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/targets/x86_64-linux/lib:/usr/mpi/gcc/openmpi-${OPENMPI_VERSION}/lib
          - platform: linux/arm64
            runner: ARM64
            ld_library_path: /lib/aarch64-linux-gnu:/usr/lib/aarch64-linux-gnu:/usr/local/nvidia/lib:/usr/local/cuda-12.9/targets/sbsa-linux/lib/:/usr/mpi/gcc/openmpi-${OPENMPI_VERSION}/lib


    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set lowercase arch var
        run: echo "ARCH=$(echo '${{ matrix.runner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: nccl-tests/Dockerfile
          push: false
          tags: nccl_tests_builder:${{ matrix.build.cuda_version }}_${{ matrix.distribution }}
          platforms: ${{ matrix.platform }}
          load: true
          build-args: |
            ${{ matrix.build.build_args }}
            LD_LIBRARY_PATH=${{ matrix.ld_library_path }}
            ARCH=${{ env.ARCH }}
          cache-from: type=local,src=.buildx-cache
          cache-to: type=local,dest=.buildx-cache,mode=max

      - name: Create nccl_tests_build_output directory
        run: mkdir -p nccl_tests_build_output

      - name: Run Docker container and copy files
        run: |
          echo "Creating container for image: nccl_tests_builder:${{ matrix.build.cuda_version }}_${{ matrix.distribution }}"
          container_id=$(docker create nccl_tests_builder:${{ matrix.build.cuda_version }}_${{ matrix.distribution }})
          
          docker start $container_id
          
          echo "Copying /usr/src/nccl-tests/build/nccl-tests-perf-${ARCH}.tar.gz"
          docker cp "$container_id:/usr/src/nccl-tests/build/nccl-tests-perf-${ARCH}.tar.gz" ./nccl_tests_build_output/
          
          docker stop $container_id
          docker rm $container_id
        env:
          ARCH: ${{ env.ARCH }}

      - name: Create GitHub Release and Upload NCCL tests
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nccl_tests_${{ matrix.build.cuda_version }}_${{ matrix.distribution }}
          name: NCCL tests for cuda ${{ matrix.build.cuda_version }} and ${{ matrix.distribution }}
          draft: false
          prerelease: false
          files: |
            nccl_tests_build_output/nccl-tests-perf-${{ env.ARCH }}.tar.gz

      - name: Cleanup
        run: rm -rf nccl_tests_build_output/*.tar.gz
